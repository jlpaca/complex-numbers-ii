\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{kf-complex}[2019/07/12 animating complex numbers in tikz-kf]

\RequirePackage{tikz-kf}

%% COLOUR SCHEME

% dark (background) sequence
\definecolor{bg-a}{gray}{0}
\definecolor{bg-b}{gray}{0.5}

% light (foreground) sequence
\definecolor{fg-a}{gray}{1}
\definecolor{fg-b}{gray}{0.8}

% default background & foreground colours
\pagecolor{bg-a}
\color{fg-a}

%% COMPLEX NUMBERS %%
% set up pgfkeys and default transition arguments
\newcommand\z@dt{0.5}

% grid
\pgfkeys{
  /z/grid/.is family, /z/grid,
  in/.store in=\z@in,
  origin x/.store in=\z@origin@x,
  origin y/.store in=\z@origin@y,
  out/.store in=\z@out,
  unit/.store in=\zunit,
  default/.style={
    in=-\z@dt,
    origin x=\halfwidth,
    origin y=\halfheight,
    out=\tend+\z@dt,
    unit=1,
  }
}
\newcommand\zgrid[2][]{{
    \pgfkeys{/z/grid, default, #1}

    %\kfclip{\z@in}{\z@out}{
      \kftween[in=\z@in, out=\z@in+\z@dt]{0}{2}
      \pgfmathsetmacro\z@xa\pgfmathresult

      \kftween[in=(\z@out-\z@dt), out=\z@out]{0}{2}
      \pgfmathsetmacro\z@xb\pgfmathresult

      
      \draw[thin, bg-b] (\z@xb*\halfwidth, {\z@origin@y}) -- (\z@xa*\halfwidth, {\z@origin@y});
      \draw[thin, bg-b] ({\z@origin@x}, \z@xb*\halfwidth) -- ({\z@origin@x}, {\z@xa*\halfheight});
      \kftextin[in=\z@in+\z@dt, out=\z@in+\z@dt, polar=false]{\halfwidth*2-0.6}{\z@origin@y+0.5}{\textcolor{bg-b}{$\operatorname{Re}$}}
      \kftextin[in=\z@in+\z@dt, out=\z@in+\z@dt, polar=false]{\z@origin@x+0.6}{\halfheight*2-0.4}{\textcolor{bg-b}{$\operatorname{Im}$}}

      \kftextout[in=\z@in+\z@dt, duration=\z@dt, out=\z@out, polar=false]{\halfwidth*2-0.6}{\z@origin@y+0.5}{\textcolor{bg-b}{$\operatorname{Re}$}}
      \kftextout[in=\z@in+\z@dt, duration=\z@dt, out=\z@out, polar=false]{\z@origin@x+0.6}{\halfheight*2-0.4}{\textcolor{bg-b}{$\operatorname{Im}$}}

      
      \begin{scope}[shift={({\z@origin@x}, {\z@origin@y})}]
        #2
      \end{scope}
    %}
}}

% draw a complex number
\newif\ifz@arg@visible
\newif\ifz@stagger
\pgfkeys{
  /z/.is family, /z,
  arg origin/.store in=\z@arg@origin,
  arg offset/.store in=\z@arg@offset,
  arg radius/.store in=\z@arg@radius,
  arg visible/.is if=z@arg@visible,
  duration/.store in=\z@duration,
  in/.store in=\z@in,
  out/.store in=\z@out,
  stagger/.is if=z@stagger,
  default/.style={
    arg origin=0,
    arg offset=0.05,
    arg radius=1,
    arg visible=true,
    duration=\z@dt,
    in=0,
    out=\tend,
    stagger=true,
  }  
}
\newcommand\z[3][]{{
    \pgfkeys{/z, default, #1}
    
    \pgfmathsetmacro\re{\zunit*(#2)*cos(#3 r)}
    \pgfmathsetmacro\im{\zunit*(#2)*sin(#3 r)}

    \ifz@arg@visible
    \zarg[#1]{#3}
    \fi
    
    \draw (0, 0) -- (\re, \im);
    \fill (\re, \im) circle (0.12);
}}

\newcommand\zin[3][]{{
    \pgfkeys{/z, default, #1}
    \kfclip{\z@in}{\z@out}{
      
      \pgfmathsetmacro\re{\zunit*(#2)*cos(#3 r)}
      \pgfmathsetmacro\im{\zunit*(#2)*sin(#3 r)}
      
      \kftween[in=(\z@in), duration=((\z@duration/2)]{0}{1}
      \pgfmathsetmacro\z@xa\pgfmathresult
      \draw (0, 0) -- (\re*\z@xa, \im*\z@xa);

      \kftween[in=((\z@in)+(\z@duration)/2), duration=((\z@duration)/2)]{0}{1}
      \pgfmathsetmacro\z@xa\pgfmathresult
      \fill (\re, \im) circle (0.12*\z@xa);
      
      \ifz@arg@visible
      \zargin[#1]{#3}
      \fi
    }
}}

\newcommand\zout[3][]{{
    \pgfkeys{/z, default, #1}
    %\ifz@stagger \pgfmathsetmacro\zout{\zout-\z@dt} \fi
    \kfclip{\z@in}{\z@out}{
      \pgfmathsetmacro\re{\zunit*(#2)*cos(#3 r)}
      \pgfmathsetmacro\im{\zunit*(#2)*sin(#3 r)}
      
      \kftween[in=(\z@out-\z@duration), duration=(\z@duration/2)]{0}{1}
      \pgfmathsetmacro\z@xa\pgfmathresult
      \draw (\re*\z@xa, \im*\z@xa) -- (\re, \im);

      \kftween[in=(\z@out-\z@duration/2), duration=(\z@duration/2)]{0.12}{0}
      \pgfmathsetmacro\z@xb\pgfmathresult
      \fill (\re, \im) circle (\z@xb);
    }
    \ifz@arg@visible
    \zargout[#1]{#3}
    \fi
}}


% draw only the argument of a complex number.
\newcommand\zarg[2][]{{
    \pgfkeys{/z, default, #1}
    \kfclip{\z@in}{\z@out}{
    % make sure the offset is pointed the right way.
    \pgfmathsetmacro\z@arg@offset{((#2) - \z@arg@origin > 0 ? 1 : -1)*\z@arg@offset}
    \pgfmathsetmacro\z@xa{\z@arg@origin+\z@arg@offset}
    \pgfmathsetmacro\z@xb{(#2)-\z@arg@offset}

    \pgfmathsetmacro\re{\z@arg@radius*cos(\z@xa r)}
    \pgfmathsetmacro\im{\z@arg@radius*sin(\z@xa r)}

    % only draw if legible.
    \pgfmathtruncatemacro\z@xc{abs(\z@xa - \z@xb) > 2*abs(\z@arg@offset)}
    \ifnum\z@xc=1
    \pgfkeys{/pgf/fpu=false}
    \draw[->,>=stealth] (\re, \im) arc (\z@xa r:\z@xb r:\z@arg@radius);
    \pgfkeys{/pgf/fpu=true}
    \fi
    }
}}
\newcommand\zargin[2][]{{
    \pgfkeys{/z, default, #1}

    \kfclip{\z@in}{\z@out}{
      \kftween[in=\z@in, duration=\z@duration]{\z@arg@origin}{#2}
      \pgfmathsetmacro\z@xc\pgfmathresult
      \zarg[#1]{\z@xc}
    }
}}
\newcommand\zargout[2][]{{
    \pgfkeys{/z, default, #1}
    \kfclip{\z@in}{\z@out}{
      \kftween[in=(\z@out-\z@duration), duration=\z@duration]{\z@arg@origin}{#2}
      \pgfmathsetmacro\z@xc\pgfmathresult
      \zarg[#1, arg origin=\z@xc]{#2}
    }
}}


\newcommand\ztween[5][]{{
    \pgfkeys{/z, default, #1}
    
    \kfclip{\z@in}{\z@out}{
      \kftween[in=\z@in, duration=\z@duration]{#2}{#4}
      \pgfmathsetmacro\z@xa\pgfmathresult
      % optionally stagger the modulus & argument tweens
      \ifz@stagger \pgfmathsetmacro\z@in{\z@in+\z@duration} \fi
      \kftween[in=\z@in, duration=\z@duration]{#3}{#5}
      \pgfmathsetmacro\z@xb\pgfmathresult

      \z[#1]{\z@xa}{\z@xb}
    }
}}

%% TITLE CARD
\newlength\z@la
\newlength\z@lb
\newcommand\ztitle[1]{{
    % for title cards, invert palette.
    \fill[fg-a] (0, 0) rectangle (2*\halfwidth, 2*\halfheight);

    \begin{scope}[shift={(\halfwidth, \halfheight+0.5)}, color=bg-a]

      \settowidth{\z@la}{\begin{pgfinterruptpicture}#1\end{pgfinterruptpicture}}
      \settoheight{\z@lb}{\begin{pgfinterruptpicture}#1\end{pgfinterruptpicture}}

      \kftween[in=0, out=\z@dt]{-0.5}{0.5}
      \pgfmathsetmacro\w\pgfmathresult
      \draw  (-\z@la/2, -\z@lb/2-0.5) -- (\w*\z@la, -\z@lb/2-0.5);

      \kftext[polar=false]{0}{0}{\textcolor{bg-a}{\contour{white}{#1}}}

    \end{scope}
}}
