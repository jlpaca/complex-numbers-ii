\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{tikz-kf}[2019/07/12 keyframe animation in LaTeX]

\RequirePackage{tikz}
\RequirePackage{xcolor}

% use fpu for everything
\usetikzlibrary{fpu}
\pgfkeys{/pgf/fpu=true, /pgf/fpu/output format=fixed}

%% GLOBALS %%

%% export format sepcification%

\newcommand\kf@fps{30}   % 30 frames per second
\newcommand\kf@ppi{600}  % 600 pixels per inch
\newcommand\kf@pxh{1080} % 1080p

\newcommand\kf@width{16} % aspect ratio
\newcommand\kf@height{9} % 16 : 9

%% setter functions
\newcommand\kfsetfps[1]{\renewcommand\kf@fps{#1}}

%% a sequence of frames of duration {#1} seconds.
%%
%% defines the following macros:
%% \f                      - current frame, indexed from 1.
%% \t                      - current time, in seconds.
%% \tend                   - time of final frame.
%% \halfwidth, \halfheight - co-ordinates of centre frame.
\newcommand{\kfframes}[2]{
  \begingroup
  % calculate some format parameters
  \pgfmathsetmacro\kf@scale{\kf@pxh/\kf@ppi/\kf@height}
  \pgfmathsetmacro\halfheight{\kf@height/2}
  \pgfmathsetmacro\halfwidth{\kf@width/2}
  
  % calculate the number of frames. \kfframes{0}{<content>} renders
  % a single frame.
  \pgfmathsetmacro\kf@n{max(1, \kf@fps*#1)}
  \pgfmathsetmacro\tend{#1}

  \foreach \f in {1, ..., \kf@n}{
    
    % calculate current time.
    \pgfmathsetmacro\t{\f/\kf@fps}

    % each frame is a tikz picture with the appropriate scale and
    % clipped to the viewport.
    \begin{tikzpicture}[x=\kf@scale in,y=\kf@scale in]
      \clip (0, 0) rectangle (\kf@width, \kf@height);
      #2
    \end{tikzpicture}
    
  }
  \endgroup
}


%% cubic step function
\newcommand\kf@smoothstep[1]{
  \pgfmathsetmacro\kf@xa{#1}
  \pgfmathtruncatemacro\kf@xb{\kf@xa < 0 || 1 < \kf@xa ? 0 : 1}
  \ifnum\kf@xb=1
  \pgfmathparse{3*\kf@xa^2-2*\kf@xa^3}
  \else
  \pgfmathparse{\kf@xa < 0 ? 0 : 1}
  \fi
}

%% linear interpolation
\newcommand\kf@lerp[3]{
  % #1 / #2 - start / end value
  % #3      - progress
  \pgfmathsetmacro\kf@xa{#3}
  \pgfmathparse{(#1)*(1-\kf@xa)+(#2)*\kf@xa}
}

%% tween
\pgfkeys{
  /kf/tween/.is family, /kf/tween,
  duration/.store in=\kf@tween@duration,
  in/.store in=\kf@tween@in,
  out/.store in=\kf@tween@out,
  default/.style={
    duration=(\kf@tween@out-\kf@tween@in),
    in=0,
    out=\tend,
  }
}
\newcommand\kftween[3][]{
  \pgfkeys{/kf/tween, default, #1}
  % #2 / #3 - start / end value
  \kf@smoothstep{(\t-(\kf@tween@in))/\kf@tween@duration}
  \kf@lerp{#2}{#3}{\pgfmathresult}
}


%% conditional rendering
\newcommand\kfclip[3]{
  \pgfmathtruncatemacro\kf@xa{(#1) <= \t && \t < (#2)}
  \ifnum\kf@xa=1\relax #3 \fi
}

%% text
\newif\ifkf@text@polar
\pgfkeys{
  /kf/text/.is family, /kf/text,
  duration/.store in=\kf@text@duration,
  in/.store in=\kf@text@in,
  offset fst/.store in=\kf@text@offset@fst,
  offset snd/.store in=\kf@text@offset@snd,
  out/.store in=\kf@text@out,
  polar/.is if=kf@text@polar,
  default/.style={
    duration=(\kf@text@out-\kf@text@in),
    in=0,
    offset fst=0,
    offset snd=0,
    out=\tend,
    polar=true,
  }
}
\newcommand\kftext[4][]{{
  \pgfkeys{/kf/text, default, #1}
  \ifkf@text@polar
  \pgfmathsetmacro\kf@xa{(#2)*cos(#3 r)+(\kf@text@offset@fst)*cos((\kf@text@offset@snd) r)}
  \pgfmathsetmacro\kf@xb{(#2)*sin(#3 r)+(\kf@text@offset@fst)*sin((\kf@text@offset@snd) r)}
  \else
  \pgfmathsetmacro\kf@xa{(#2)+(\kf@text@offset@fst)}
  \pgfmathsetmacro\kf@xb{(#3)+(\kf@text@offset@snd)}
  \fi
  \node at (\kf@xa, \kf@xb) {#4};
}}

%% text transitions
\newcommand\kftextin[4][]{{
  \pgfkeys{/kf/text, default, #1}
  \kfclip{\kf@text@in}{\kf@text@out}{
    \kftween[in=\kf@text@in, duration=\kf@text@duration]{0}{1}
    \pgfmathsetmacro\kf@xa\pgfmathresult
    \begin{scope}[opacity=\kf@xa]
      \kftext[#1]{#2}{#3}{#4}
    \end{scope}
  }
}}

\newcommand\kftextout[4][]{{
  \pgfkeys{/kf/text, default, #1}
  \kfclip{\kf@text@in}{\kf@text@out}{
    \kftween[in=(\kf@text@out-\kf@text@duration), duration=(\kf@text@duration)]{1}{0}
    \pgfmathsetmacro\kf@xa\pgfmathresult
    \begin{scope}[opacity=\kf@xa]
      \kftext[#1]{#2}{#3}{#4}
    \end{scope}
  }
}}

\newcommand\kftexttween[7][]{{
  \pgfkeys{/kf/text, default, #1}
  \kfclip{\kf@text@in}{\kf@text@out}{
    \kftextout[#1, out=(\kf@text@in+\kf@text@duration)]{#2}{#3}{#4}
    \kftextin[#1]{#5}{#6}{#7}
  }
}}


